---
# Variables containing variables must be constructed with values
# to be fed into the included ha_cluster role

# TODO: add conditionals to verify that the same resource agent is not already
#       defined in user input variables. Conflicting user input should take precedence.

# Several parameters are pre-defined from potentially inherited ha_cluster LSR definitions.
# They are necessary to be used for combining all cluster setup definitions.
#
# See tasks/ascertain_ha_cluster_in_inventory.yml:
#
# __sap_ha_pacemaker_cluster_cluster_properties: "{{ ha_cluster_cluster_properties }}"
# __sap_ha_pacemaker_cluster_constraints_colocation: "{{ ha_cluster_constraints_colocation }}"
# __sap_ha_pacemaker_cluster_constraints_location: "{{ ha_cluster_constraints_location }}"
# __sap_ha_pacemaker_cluster_constraints_order: "{{ ha_cluster_constraints_order }}"
# __sap_ha_pacemaker_cluster_fence_agent_packages: "{{ ha_cluster_fence_agent_packages }}"
# __sap_ha_pacemaker_cluster_repos: "{{ ha_cluster_repos }}"
# __sap_ha_pacemaker_cluster_resource_clones: "{{ ha_cluster_resource_clones }}"
# __sap_ha_pacemaker_cluster_resource_groups: "{{ ha_cluster_resource_groups }}"
# __sap_ha_pacemaker_cluster_resource_primitives: "{{ ha_cluster_resource_primitives }}"


### Different SAPInstance resource attributes for ENSA1 and ENSA2
- name: "SAP HA Prepare Pacemaker - Define default ASCS/ERS instance attributes (ENSA2)"
  when: not sap_ha_pacemaker_cluster_nwas_abap_ascs_ers_ensa1
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_meta_attrs:
      - name: resource-stickiness
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_resource_stickiness }}"

    __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_attrs:
      - name: InstanceName
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_instance_name }}"
      - name: START_PROFILE
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_start_profile_string }}"
      - name: AUTOMATIC_RECOVER
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_automatic_recover_bool | string }}"
      - name: IS_ERS
        value: true

- name: "SAP HA Prepare Pacemaker - Define ASCS/ERS instance attributes (ENSA1)"
  when: sap_ha_pacemaker_cluster_nwas_abap_ascs_ers_ensa1
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_meta_attrs:
      - name: resource-stickiness
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_resource_stickiness }}"
      - name: migration-threshold
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_ensa1_migration_threshold }}"
      - name: failure-timeout
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_ensa1_failure_timeout }}"

    __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_attrs:
      - name: InstanceName
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_instance_name }}"
      - name: START_PROFILE
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_start_profile_string }}"
      - name: AUTOMATIC_RECOVER
        value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_automatic_recover_bool | string }}"
      - name: IS_ERS
        value: true


### Resources
# ASCS/ERS instance filesystems
- name: "SAP HA Prepare Pacemaker - Add filesystem resources for ASCS/ERS to resource definition"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_filesystem] }}"
  vars:
    __resource_filesystem:
      id: |-
        {%- if '/ASCS' in __mountpoint -%}
          {% set idname = sap_ha_pacemaker_cluster_nwas_abap_ascs_filesystem_resource_name %}
        {%- elif '/ERS' in __mountpoint -%}
          {% set idname = sap_ha_pacemaker_cluster_nwas_abap_ers_filesystem_resource_name %}
        {%- endif -%}
        {{ idname }}
      agent: "ocf:heartbeat:Filesystem"
      instance_attrs:
        - attrs:
            - name: device
              value: "{{ __nfs_server }}/{{ __nfs_path }}/{{ __mountpoint }}"
            - name: directory
              value: "/usr/sap/{{ __mountpoint }}"
            - name: fstype
              value: "{{ __fstype }}"
            - name: options
              value: "{{ __mount_opts }}"
            - name: force_unmount
              value: "{{ sap_ha_pacemaker_cluster_resource_filesystem_force_unmount }}"
      operations:
        - action: start
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 60
        - action: stop
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 120
        - action: monitor
          attrs:
            - name: interval
              value: 200
            - name: timeout
              value: 40

    # Format input variables to make above construction code more readable.
    # Method:
    # - parse sap_ha_pacemaker_cluster_storage_definition
    # - check if a mounpoint is defined (filters out swap)
    # - if the needed parameter is defined, take it
    # - otherwise, take the value from a default parameter

    __fstype: |-
      {% for def in sap_ha_pacemaker_cluster_storage_definition -%}
      {% if def.mountpoint is defined and '/usr/sap' == def.mountpoint | regex_replace('/$', '') -%}
        {% if def.nfs_filesystem_type is defined -%}
          {{ def.nfs_filesystem_type }}
        {%- else -%}
          {{ sap_ha_pacemaker_cluster_storage_nfs_filesytem_type }}
        {%- endif %}
      {%- endif %}
      {%- endfor %}
    __mount_opts: |-
      {% for def in sap_ha_pacemaker_cluster_storage_definition -%}
      {% if def.mountpoint is defined and '/usr/sap' == def.mountpoint | regex_replace('/$', '') -%}
        {% if def.nfs_mount_options is defined -%}
          {{ def.nfs_mount_options }}
        {%- else -%}
          {{ sap_ha_pacemaker_cluster_storage_nfs_mount_options }}
        {%- endif %}
      {%- endif %}
      {%- endfor %}
    __nfs_path: |-
      {% for def in sap_ha_pacemaker_cluster_storage_definition -%}
      {% if def.mountpoint is defined and '/usr/sap' == def.mountpoint | regex_replace('/$', '') -%}
        {{ def.nfs_path | regex_replace('^/', '') | regex_replace('/$', '') }}
      {%- endif %}
      {%- endfor %}
    __nfs_server: |-
      {% for def in sap_ha_pacemaker_cluster_storage_definition -%}
      {% if def.mountpoint is defined and '/usr/sap' == def.mountpoint | regex_replace('/$', '') -%}
        {% if def.nfs_server is defined -%}
          {{ def.nfs_server | regex_replace('/$', '') }}
        {%- else -%}
          {{ sap_ha_pacemaker_cluster_storage_nfs_server | regex_replace('/$', '') }}
        {%- endif %}
      {%- endif %}
      {%- endfor %}
    __mountpoint: "{{ fsres_item }}"

  loop: "{{ __sap_ha_pacemaker_cluster_nwas_abap_ascs_ers_filesystems }}"
  loop_control:
    loop_var: fsres_item
    label: "{{ fsres_item }}"
  when:
    - __resource_filesystem.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))

# End of filesystem resource task


# ASCS instance resource definition
- name: "SAP HA Prepare Pacemaker - Add resource: SAPInstance for Central Service (ABAP ASCS)"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapinstance] }}"
  vars:
    __resource_sapinstance:
      id: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_resource_name }}"
      agent: "ocf:heartbeat:SAPInstance"
      instance_attrs:
        - attrs:
            - name: InstanceName
              value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_instance_name }}"
            - name: START_PROFILE
              value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_start_profile_string }}"
            - name: AUTOMATIC_RECOVER
              value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_automatic_recover_bool | string }}"
      meta_attrs:
        - attrs: "{{ __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_meta_attrs }}"
      operations:
        - action: start
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 600
        - action: stop
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 600
        - action: monitor
          attrs:
            - name: interval
              value: 20
            - name: on-fail
              value: restart
            - name: timeout
              value: 60
  when:
    - __resource_sapinstance.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))


# ERS instance resource definition
- name: "SAP HA Prepare Pacemaker - Add resource: SAPInstance for Enqueue Replication Service (ABAP ERS)"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapinstance_ers] }}"
  vars:
    __resource_sapinstance_ers:
      id: "{{ sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_resource_name }}"
      agent: "ocf:heartbeat:SAPInstance"
      instance_attrs:
        - attrs: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_attrs }}"
      operations:
        - action: start
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 600
        - action: stop
          attrs:
            - name: interval
              value: 0
            - name: timeout
              value: 600
        - action: monitor
          attrs:
            - name: interval
              value: 20
            - name: on-fail
              value: restart
            - name: timeout
              value: 60
  when:
    - __resource_sapinstance_ers.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))

### Groups
# ASCS group consists of resources in this order:
# - ASCS filesystem
# - ASCS instance
# - ASCS VIP

- name: "SAP HA Prepare Pacemaker - Add resource group for ASCS resources"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_groups: "{{ __sap_ha_pacemaker_cluster_resource_groups + [__ascs_group] }}"
  vars:
    __ascs_group:
      id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ascs_resource_group_name }}"
      resource_ids: |
        {% set resource_ids_list = [] %}
        {%- for resource in
          sap_ha_pacemaker_cluster_nwas_abap_ascs_filesystem_resource_name,
          sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_resource_name,
          sap_ha_pacemaker_cluster_vip_nwas_abap_ascs_resource_name,
          sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ascs_resource_name %}
          {%- if resource | length > 0
            and resource in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id')) %}
            {%- set ids = resource_ids_list.append(resource) %}
          {%- endif %}
        {%- endfor %}
        {{ resource_ids_list }}
      meta_attrs:
        - attrs:
            - name: resource-stickiness
              value: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_group_stickiness }}"
  when:
    - __ascs_group.id is not in (__sap_ha_pacemaker_cluster_resource_groups | map(attribute='id'))


# ERS group consists of resources in this order:
# - ERS filesystem
# - ERS instance
# - ERS VIP

- name: "SAP HA Prepare Pacemaker - Add resource group for ERS resources"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_groups: "{{ __sap_ha_pacemaker_cluster_resource_groups + [__ers_group] }}"
  vars:
    __ers_group:
      id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ers_resource_group_name }}"
      resource_ids: |
        {% set resource_ids_list = [] %}
        {%- for resource in
          sap_ha_pacemaker_cluster_nwas_abap_ers_filesystem_resource_name,
          sap_ha_pacemaker_cluster_nwas_abap_ers_sapinstance_resource_name,
          sap_ha_pacemaker_cluster_vip_nwas_abap_ers_resource_name,
          sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ers_resource_name %}
          {%- if resource | length > 0
            and resource in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id')) %}
            {%- set ids = resource_ids_list.append(resource) %}
          {%- endif %}
        {%- endfor %}
        {{ resource_ids_list }}
  when:
    - __ers_group.id is not in (__sap_ha_pacemaker_cluster_resource_groups | map(attribute='id'))

- name: "SAP HA Prepare Pacemaker - Display VIP resource group definition if any were built"
  ansible.builtin.debug:
    var: __sap_ha_pacemaker_cluster_resource_groups
  when:
    - __sap_ha_pacemaker_cluster_resource_groups is defined
    - __sap_ha_pacemaker_cluster_resource_groups | length > 0


### Constraints
# ERS and ASCS resource groups should try to avoid running on the same node
- name: "SAP HA Prepare Pacemaker - Add colocation constraint: ERS avoids to run on the ASCS node"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_colocation: "{{ __sap_ha_pacemaker_cluster_constraints_colocation + [__constraint_colo_ers] }}"
  vars:
    __constraint_colo_ers:
      id: "{{ sap_ha_pacemaker_cluster_nwas_colocation_ascs_no_ers_name }}"
      resource_leader:
        id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ascs_resource_group_name }}"
        role: started
      resource_follower:
        id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ers_resource_group_name }}"
      options:
        - name: score
          value: -5000
  when:
    - __constraint_colo_ers.resource_follower not in (__sap_ha_pacemaker_cluster_constraints_colocation | map(attribute='resource_follower'))

# Optional: ASCS should be started before ERS
- name: "SAP HA Prepare Pacemaker - Add order constraint: first start ASCS group, then ERS group"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_order: "{{ __sap_ha_pacemaker_cluster_constraints_order + [__constraint_order_ascs_ers] }}"
  vars:
    __constraint_order_ascs_ers:
      id: "{{ sap_ha_pacemaker_cluster_nwas_order_ascs_first_name }}"
      resource_first:
        id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ascs_resource_group_name }}"
        role: started
      resource_then:
        id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ers_resource_group_name }}"
      options:
        - name: symmetrical
          value: "false"
        - name: kind
          value: Optional
#  when:
#    - __constraint_order_ascs_ers.resource_then not in (__sap_ha_pacemaker_cluster_constraints_order | map(attribute='resource_then'))

# ENSA1 only: location rule for ASCS to follow ERS
- name: "SAP HA Prepare Pacemaker - Add location constraint: ASCS follows ERS in ENSA1 setup"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_location: "{{ __sap_ha_pacemaker_cluster_constraints_location + [__constraint_location_ascs_ers] }}"
  vars:
    __constraint_location_ascs_ers:
      resource:
        id: "{{ sap_ha_pacemaker_cluster_nwas_abap_ascs_sapinstance_resource_name }}"
      rule: "runs_ers_{{ sap_ha_pacemaker_cluster_nwas_abap_sid }} eq 1"
      options:
        - name: score
          value: 2000
  when:
    - sap_ha_pacemaker_cluster_nwas_abap_ascs_ers_ensa1


# When /sapmnt is managed by the cluster,
# start instance groups only after the SAPMNT resource is running.
- name: "SAP HA Prepare Pacemaker - Add order constraint: first start /sapmnt, then start ASCS group"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_order: "{{ __sap_ha_pacemaker_cluster_constraints_order + [__constraint_order_sapmnt] }}"
  vars:
    __constraint_order_sapmnt:
      resource_first:
        id: "{{ sap_ha_pacemaker_cluster_nwas_sapmnt_filesystem_resource_clone_name }}"
        role: started
      resource_then:
        id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ascs_resource_group_name }}"
  when:
    - sap_ha_pacemaker_cluster_nwas_shared_filesystems_cluster_managed

- name: "SAP HA Prepare Pacemaker - Add order constraint: first start /sapmnt, then start ERS group"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_order: "{{ __sap_ha_pacemaker_cluster_constraints_order + [__constraint_order_sapmnt] }}"
  vars:
    __constraint_order_sapmnt:
      resource_first:
        id: "{{ sap_ha_pacemaker_cluster_nwas_sapmnt_filesystem_resource_clone_name }}"
        role: started
      resource_then:
        id: "{{ sap_ha_pacemaker_cluster_vip_nwas_abap_ers_resource_group_name }}"
  when:
    - sap_ha_pacemaker_cluster_nwas_shared_filesystems_cluster_managed
