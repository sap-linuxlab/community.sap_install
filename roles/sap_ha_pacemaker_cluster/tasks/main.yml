---
# 1. Role arguments are validated through meta/arguments_spec.yml (ansible >= 2.11)
# 2. Detect SAP solution to be configured (scale-up, scale-out, etc.)
#    * Play hosts must have SAP installed and landscape information discoverable ?!
# 3. Include tasks for parameter validation for the selected solution
#    * Certain parameters must match the target solution
#      (networking, IDs, number of nodes)
# 4. Include tasks for building the ha_cluster arguments for the selected solution
#    * scale-up, scale-out, scale-up + mtr, scale-out + mtr
# 5. Include LSR "ha_cluster" with the constructed parameters as role arguments
# 6. Add solution specific config
#    * srhook
# 7. Save LSR "ha_cluster" input parameters in .yml file for easy reuse

# TODO: Build all resource/constraint configuration variables based on
# simpler user input (think: drop-down options in a UI)

- name: "SAP HA Prepare Pacemaker - Include parameter validation tasks"
  ansible.builtin.import_tasks: validate_input_parameters.yml

# Make sure that all parameters already set for 'ha_cluster' are also inherited.
# Add to this file a task for EACH parameter which this SAP cluster role
# supports.
- name: "SAP HA Prepare Pacemaker - Include tasks from 'ha_cluster' role definitions"
  ansible.builtin.import_tasks: import_hacluster_vars_from_inventory.yml

- name: "SAP HA Prepare Pacemaker - Include facts and common variables"
  ansible.builtin.import_tasks: include_vars_common.yml

# Determine which SAP landscape we are going to configure in the cluster.
- name: "SAP HA Prepare Pacemaker - Include tasks for SAP landscape calculation"
  ansible.builtin.import_tasks: ascertain_sap_landscape.yml

# Determine if we are on a cloud platform.
- name: "SAP HA Prepare Pacemaker - Include tasks for platform detection"
  ansible.builtin.import_tasks: platform/ascertain_platform_type.yml

- name: "SAP HA Prepare Pacemaker - Include platform specific variables"
  ansible.builtin.import_tasks: platform/include_vars_platform.yml

- name: "SAP HA Prepare Pacemaker - Include common variable construction tasks"
  ansible.builtin.import_tasks: construct_vars_common.yml

- name: "SAP HA Prepare Pacemaker - Include variable construction for STONITH resources"
  ansible.builtin.import_tasks: construct_vars_stonith.yml

- name: "SAP HA Prepare Pacemaker - Include variable construction for VIP resources"
  ansible.builtin.import_tasks: include_construct_vip_resources.yml

# Include construction task files for different scenarios.

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP HANA common"
  ansible.builtin.include_tasks:
    file: construct_vars_hana_common.yml
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'hana') | length > 0

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP HANA Scale-up"
  ansible.builtin.include_tasks:
    file: construct_vars_hana_scaleup.yml
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'hana_scaleup') | length > 0
    - not __sap_ha_pacemaker_cluster_saphanasr_angi_available

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP HANA Scale-up - Angi"
  ansible.builtin.include_tasks:
    file: construct_vars_hana_scaleup_angi.yml
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'hana_scaleup') | length > 0
    - __sap_ha_pacemaker_cluster_saphanasr_angi_available

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP NetWeaver common"
  ansible.builtin.include_tasks:
    file: construct_vars_nwas_common.yml
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'nwas_abap') | length > 0

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP NetWeaver ABAP ASCS/ERS"
  ansible.builtin.include_tasks:
    file: construct_vars_nwas_abap_ascs_ers.yml
  loop: "{{ sap_ha_pacemaker_cluster_host_type }}"
  loop_control:
    loop_var: nwas_build_item
  when:
    - "'nwas_abap_ascs' in nwas_build_item"
    - not sap_ha_pacemaker_cluster_nwas_abap_ascs_ers_simple_mount

- name: SAP HA Prepare Pacemaker - Include variable construction for SAP NetWeaver ABAP ASCS/ERS
    Simple Mount # noqa name[template]
  ansible.builtin.include_tasks:
    file: construct_vars_nwas_abap_ascs_ers_simple_mount.yml
  loop: "{{ sap_ha_pacemaker_cluster_host_type }}"
  loop_control:
    loop_var: nwas_build_item
  when:
    - "'nwas_abap_ascs' in nwas_build_item"
    - sap_ha_pacemaker_cluster_nwas_abap_ascs_ers_simple_mount
    # TODO: Remove rule when SAPStartSrv resource agents are available on Red Hat
    - ansible_os_family == 'Suse'

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP NetWeaver ABAP PAS/AAS"
  ansible.builtin.include_tasks:
    file: construct_vars_nwas_abap_pas_aas.yml
  loop: "{{ sap_ha_pacemaker_cluster_host_type }}"
  loop_control:
    loop_var: nwas_build_item
  when:
    - "'nwas_abap_pas' in nwas_build_item"

- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP NetWeaver Java SCS/ERS"
  ansible.builtin.include_tasks:
    file: construct_vars_nwas_java_scs_ers.yml
  loop: "{{ sap_ha_pacemaker_cluster_host_type }}"
  loop_control:
    loop_var: nwas_build_item
  when:
    - "'nwas_java' in nwas_build_item"

# Include constraints construction after the related resources were constructed.
- name: "SAP HA Prepare Pacemaker - Include variable construction for SAP Hana VIP constraints"
  ansible.builtin.include_tasks:
    file: construct_vars_vip_constraints_hana.yml

# All of the SAP HA role constructed parameters must be translated to
# 'ha_cluster' Linux System Role parameters.
- name: "SAP HA Prepare Pacemaker - Translate all parameters to 'ha_cluster' input variables"
  ansible.builtin.include_tasks:
    file: construct_final_hacluster_vars.yml


##########################################################
# BLOCK which covers actual changes on the target systems
##########################################################

- name: "SAP HA Install Pacemaker - Block with actual changes"
  block:

    # Start with prerequisite changes for certain platforms, if applicable
    - name: "SAP HA Install Pacemaker - Include platform specific prerequisites"
      when: __sap_ha_pacemaker_cluster_platform_file is file
      ansible.builtin.include_tasks:
        file: "{{ item }}"
      loop:
        - "platform/preconfigure_{{ __sap_ha_pacemaker_cluster_platform }}.yml"
      vars:
        __sap_ha_pacemaker_cluster_platform_file: "{{ role_path }}/tasks/{{ item }}"

    # Stop and disable services that conflict with cluster setups,
    # for instance cloud-init services on cloud platforms
    - name: "SAP HA Install Pacemaker - Stop and disable services"
      when: sap_ha_pacemaker_cluster_disable_services is defined
      register: __sap_ha_pacemaker_cluster_disable_services
      ansible.builtin.service:
        name: "{{ service_item }}"
        enabled: false
        state: stopped
      loop: "{{ sap_ha_pacemaker_cluster_disable_services }}"
      loop_control:
        loop_var: service_item
        label: "{{ service_item }}"
      failed_when:
        - __sap_ha_pacemaker_cluster_disable_services.failed
        - '"Could not find the requested service" not in __sap_ha_pacemaker_cluster_disable_services.msg'

    - name: "SAP HA Install Pacemaker - Query if CIB already exists"
      ansible.builtin.command:
        cmd: cibadmin --query
      register: __sap_ha_pacemaker_cluster_cib_query
      check_mode: false
      changed_when: false
      failed_when: false

    - name: "SAP HA Install Pacemaker - Create backup of existing CIB"
      when:
        - __sap_ha_pacemaker_cluster_cib_query.stdout is defined
        - __sap_ha_pacemaker_cluster_cib_query.stdout|length > 0
      ansible.builtin.copy: # noqa template-instead-of-copy
        backup: true
        content: "{{ __sap_ha_pacemaker_cluster_cib_query.stdout }}"
        dest: /root/cib_backup.xml
        group: root
        owner: root
        mode: "0600"

    # Cluster installation and configuration through the dedicated
    # linux system role 'ha_cluster'
    - name: "SAP HA Install Pacemaker - Include System Role 'ha_cluster'"
      ansible.builtin.import_role:
        name: "{{ sap_ha_pacemaker_cluster_system_roles_collection }}.ha_cluster"
      no_log: "{{ __sap_ha_pacemaker_cluster_no_log }}"  # some parameters contain secrets

    # # Resource defaults settings were added to "ha_cluster" in Apr 2023 (GH version 1.9.0)
    # # https://github.com/linux-system-roles/ha_cluster#ha_cluster_resource_defaults
    # # Keeping separate for compatibility with older versions of the ha_cluster role.
    # # TODO: Change resource defaults update to "ha_cluster" native syntax.
    # - name: "SAP HA Install Pacemaker - Check resource defaults"
    #   ansible.builtin.command:
    #     cmd: |
    #       {{ __sap_ha_pacemaker_cluster_command.resource_defaults_show }}
    #   register: __sap_ha_pacemaker_cluster_check_resource_defaults
    #   run_once: true
    #   changed_when: false
    #   check_mode: false

    # - name: "SAP HA Install Pacemaker - Update resource default attributes"
    #   when:
    #     - item.key ~ '=' ~ item.value not in __sap_ha_pacemaker_cluster_check_resource_defaults.stdout
    #     - __sap_ha_pacemaker_cluster_resource_defaults is defined
    #     - __sap_ha_pacemaker_cluster_resource_defaults | length > 0
    #   ansible.builtin.command:
    #     cmd: |
    #       {{ __sap_ha_pacemaker_cluster_command.resource_defaults_update }} {{ item.key }}={{ item.value }}
    #   loop: "{{ __sap_ha_pacemaker_cluster_resource_defaults | dict2items }}"
    #   loop_control:
    #     label: "{{ item.key }}={{ item.value }}"
    #   run_once: true
    #   changed_when: true

    # Corosync post-inst
    - name: "SAP HA Install Pacemaker - Make sure corosync systemd directory exists"
      ansible.builtin.file:
        path: /etc/systemd/system/corosync.service.d
        state: directory
        mode: '0755'
      when:
        - __sap_ha_pacemaker_cluster_platform == 'cloud_gcp_ce_vm'

    - name: "SAP HA Install Pacemaker - Corosync systemd configuration"
      ansible.builtin.copy:
        backup: true
        content: |-
          [Service]
          ExecStartPre=/bin/sleep 60

        dest: /etc/systemd/system/corosync.service.d/override.conf
        group: root
        owner: root
        mode: '0644'
      when:
        - __sap_ha_pacemaker_cluster_platform == 'cloud_gcp_ce_vm'
      notify: "Reload systemd daemon"

    - name: "SAP HA Install Pacemaker - Include srHook configuration"
      ansible.builtin.include_tasks:
        file: configure_srhook.yml
        apply:
          tags: srhook
      tags: srhook
      when:
        - sap_ha_pacemaker_cluster_host_type | select('search', 'hana') | length > 0

    # Graceful start of SAPHana clone to ensure resource agents are able to load configuration.
    - name: "SAP HA Install Pacemaker - Gracefully start SAP HANA cluster"
      ansible.builtin.include_tasks:
        file: "{{ ansible_facts['os_family'] }}/post_steps_hana_scaleup.yml"
      when:
        - sap_ha_pacemaker_cluster_host_type | select('search', 'hana_scaleup') | length > 0
      run_once: true

    # Post steps for ACS ERS crmsh cluster to remove unsupported operations
    - name: "SAP HA Install Pacemaker - Include NetWeaver ASCS/ERS post steps OS specific"
      ansible.builtin.include_tasks:
        file: "{{ ansible_facts['os_family'] }}/post_steps_nwas_abap_ascs_ers.yml"
      when:
        - sap_ha_pacemaker_cluster_host_type | select('search', 'nwas_abap') | length > 0
        - ansible_os_family == 'Suse'
      run_once: true

    - name: "SAP HA Install Pacemaker - Include NetWeaver ASCS/ERS post steps"
      ansible.builtin.include_tasks:
        file: configure_nwas_ascs_ers_postinstallation.yml
        apply:
          tags: nwas_postinst
      tags: nwas_postinst
      when:
        - sap_ha_pacemaker_cluster_host_type | select('search', 'nwas_abap') | length > 0


### END OF BLOCK: prerequisite changes and cluster setup

# Save all the constructed cluster parameters into a vars file.
#
# This will help re-using ha_cluster afterwards without losing the already
# configured resources and constraints.
# The ha_cluster role will otherwise remove configuration that is not part
# of the parameters provided during any subsequent run outside of the current
# SAP system role.
#
# TODO: Deal with secrets in output. They should be masked, maybe with
# their user provided variables?

- name: "SAP HA Install Pacemaker - Create cluster configuration parameters file"
  when:
    - sap_ha_pacemaker_cluster_create_config_varfile
    - sap_ha_pacemaker_cluster_create_config_dest | length
  ansible.builtin.template:
    backup: true
    dest: "{{ sap_ha_pacemaker_cluster_create_config_dest }}"
    mode: "0600"
    src: cluster_create_config.j2
    trim_blocks: true
    lstrip_blocks: true
  delegate_to: localhost
  run_once: true
  become: false
  check_mode: false

- name: "SAP HA Install Pacemaker - Display configuration parameters SAVE FILE location"
  when:
    - sap_ha_pacemaker_cluster_create_config_varfile
    - sap_ha_pacemaker_cluster_create_config_dest | length
  ansible.builtin.debug:
    msg: |
      The cluster resource configuration parameters have been saved here:
      >>>>>     {{ sap_ha_pacemaker_cluster_create_config_dest }}    <<<<<

      Please include these variable definitions if you run the 'ha_cluster'
      linux system role separately.
      !! Secret values of resources may be included in this output !!
  run_once: true
