---

- name: SAP HANA Checks - HANA admin user check
  block:

    - name: Check for sidadm user
      ansible.builtin.command: getent passwd {{ sap_hana_install_sid | lower }}adm
      check_mode: no
      register: __sap_hana_install_register_getent_passwd_sidadm
      changed_when: no
      failed_when: no

    - name: SAP HANA Checks - Assert that there is no sidadm user
      ansible.builtin.assert:
        that: __sap_hana_install_register_getent_passwd_sidadm.rc != 0
        fail_msg: "FAIL: User '{{ sap_hana_install_sid | lower }}adm' exists!
                   Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
        success_msg: "PASS: User '{{ sap_hana_install_sid | lower }}adm' does not exist."

  when: sap_hana_install_check_sidadm_user|d(true)

# The role supports specifying the SAP HANA group id in variable `sap_hana_install_groupid`, which is the id of the sapsys group.
# The SAP HANA installation will fail if there is already a group named sapsys but with a different ID. Let's better fail before.
- name: SAP HANA Checks - Check HANA admin group
  block:

    - name: SAP HANA Checks - Get info about the ID of the sapsys group
      ansible.builtin.command: getent group sapsys
      check_mode: no
      register: __sap_hana_install_register_getent_group_sapsys
      changed_when: no
      failed_when: no

    - name: SAP HANA Checks - In case there is a group sapsys, assert that its group ID is identical to sap_hana_install_groupid
      ansible.builtin.assert:
        that: "{{ __sap_hana_install_register_getent_group_sapsys.stdout.split(':')[2] }} == {{ sap_hana_install_groupid }}"
        success_msg: "PASS: The group ID of 'sapsys' is identical to the value of variable
                      sap_hana_install_groupid, which is '{{ sap_hana_install_groupid }}'"
        fail_msg: "FAIL: Group sapsys exists but with a different group ID than '{{ sap_hana_install_groupid }}',
	           which has been specified in variable sap_hana_install_groupid.
	           Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
      when: __sap_hana_install_register_getent_group_sapsys.rc == 0

  when:
    - sap_hana_install_groupid is defined
    - sap_hana_install_groupid | string != "None"
    - sap_hana_install_groupid | string | length > 0

## Try to use saphostctrl to figure out if HANA or other SID is installed
- name: SAP HANA Checks - Check if saphostctrl is installed
  ansible.builtin.stat:
    path: /usr/sap/hostctrl/exe/saphostctrl
  check_mode: no
  register: __sap_hana_install_register_stat_saphostctrl
  failed_when: no

- name: SAP HANA Checks - Check if SAP instances are installed with saphostctrl
  block:

    - name: SAP HANA Checks - Get list of installed SAP instances
      ansible.builtin.shell: /usr/sap/hostctrl/exe/saphostctrl -function ListInstances | cut -d":" -f2-
      register: __sap_hana_install_register_instancelist
      changed_when: false

    - name: SAP HANA Checks - debug found instances
      debug:
        var: __sap_hana_install_register_instancelist.stdout
        verbosity: 1

    - name: SAP HANA Checks - set variables with found instances
      ansible.builtin.set_fact:
        __sap_hana_install_fact_running_sid: "{{ sap_hana_deployment_register_instancelist.stdout.split('-')[0] }}"
        __sap_hana_install_fact_running_instance: "{{ sap_hana_deployment_register_instancelist.stdout.split('-')[1] }}"
        __sap_hana_install_fact_running_description: "{{ sap_hana_deployment_register_instancelist.stdout.split('-')[2] }}"

    - name: SAP HANA Checks - perfectky fine running Hana version found
      ansible.builtin.debug:
        msg: "Hana SID {{ __sap_hana_install_fact_running_sid }} Instance {{ __sap_hana_install_fact_running_instance }}"
        verbosity: 1

    - name: SAP HANA Checks - desired HANA is installed and running
      ansible.builtin.set_fact:
        __sap_hana_install_fact_is_installed: true
      when:
        - __sap_hana_install_fact_running_sid == sap_hana_install_sid
        - __sap_hana_install_fact_running_instance == sap_hana_install_number

    - name: SAP HANA Checks - trying to install HANA with other SID and same instance
      fail:
        msg: "HANA {{ __sap_hana_install_fact_running_sid }} already exists with instance number {{ __sap_hana_install_fact_running_instance }"
      when:
        - __sap_hana_install_fact_running_sid != sap_hana_install_sid
        - __sap_hana_install_fact_running_instance == sap_hana_install_number

    - name: SAP HANA Checks - trying to install HANA with identical SID and other instance number
      fail:
        msg: "HANA {{ __sap_hana_install_fact_running_sid }} already exists with instance number {{ __sap_hana_install_fact_running_instance }}"
      when:
        - __sap_hana_install_fact_running_sid == sap_hana_install_sid
        - __sap_hana_install_fact_running_instance != sap_hana_install_number

  when: __sap_hana_install_register_stat_saphostctrl.stat.exists

## If saphostcontrol is not installed

- name: SAP HANA Checks - Check directories if no saphostctrl is found
  block:
    - name: SAP HANA Checks - Get info about directory '/hana/shared/{{ sap_hana_install_sid }}'
      ansible.builtin.stat:
        path: "/hana/shared/{{ sap_hana_install_sid }}"
      check_mode: no
      register: __sap_hana_install_register_stat_hana_shared_sid_assert
      failed_when: no

    - name: SAP HANA Checks - Check if directory  '/hana/shared/{{ sap_hana_install_sid }}' is empty
      ansible.builtin.find:
        paths: "/hana/shared/{{ sap_hana_install_sid }}"
        patterns: '*'
      register: __sap_hana_install_register_files_in_hana_shared_sid_assert
      when: __sap_hana_install_register_stat_hana_shared_sid_assert.stat.exists

    - name: SAP HANA Checks - Assert that directory '/hana/shared/{{ sap_hana_install_sid }}' does not exist or is empty
      ansible.builtin.assert:
        that: not __sap_hana_install_register_stat_hana_shared_sid_assert.stat.exists
        fail_msg: "FAIL: Directory '/hana/shared/{{ sap_hana_install_sid }}' exists!
                   Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
        success_msg: "PASS: Directory '/hana/shared/{{ sap_hana_install_sid }}' does not exist."
      when: __sap_hana_install_register_files_in_hana_shared_sid_assert.matched|int != 0

    - name: SAP HANA Checks - Get info about directory '/usr/sap/{{ sap_hana_install_sid }}'
      ansible.builtin.stat:
        path: "/usr/sap/{{ sap_hana_install_sid }}"
      check_mode: no
      register: __sap_hana_install_register_stat_usr_sap_sid_assert
      failed_when: no

    - name: SAP HANA Checks - Check if directory  '/usr/sap/{{ sap_hana_install_sid }}' is empty
      ansible.builtin.find:
        paths: "/usr/sap/{{ sap_hana_install_sid }}"
        patterns: '*'
      register: __sap_hana_install_register_files_in_usr_sap_sid_assert
      when: __sap_hana_install_register_stat_usr_sap_sid_assert.stat.exists

    - name: SAP HANA Checks - Assert that directory '/usr/sap/{{ sap_hana_install_sid }}' does not exist or is empty
      ansible.builtin.assert:
        that: not __sap_hana_install_register_stat_usr_sap_sid_assert.stat.exists
        fail_msg: "FAIL: Directory '/usr/sap/{{ sap_hana_install_sid }}' exists!
                   Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
        success_msg: "PASS: Directory '/usr/sap/{{ sap_hana_install_sid }}' does not exist."
      when: __sap_hana_install_register_files_in_usr_sap_sid_assert.matched|int != 0
  when: not __sap_hana_install_register_stat_saphostctrl.stat.exists
