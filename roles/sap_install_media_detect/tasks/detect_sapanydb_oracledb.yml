---

- name: SAP Install Media Detect - Oracle DB - Create Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  with_items:
    - "{{ sap_install_media_detect_directory }}/oracledb/"
    - "{{ sap_install_media_detect_directory }}/oracledb_extracted/"
    - "{{ sap_install_media_detect_directory }}/oracledb_client_extracted/"

- name: SAP Install Media Detect - Oracle DB - List files in directory
  ansible.builtin.shell: ls -1
  register: detect_directory_files
  args:
    chdir: "{{ sap_install_media_detect_directory }}"

- name: SAP Install Media Detect - Oracle DB - Detect ZIP files (including no file extensions), ignore errors
  ansible.builtin.shell: if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then echo {{ item }}; fi
  register: detect_directory_files_zip
#  changed_when: "item.stdout | length > 0"
  with_items: 
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ sap_install_media_detect_directory }}"
  ignore_errors: true

- name: SAP Install Media Detect - Oracle DB - Identify Oracle DB installation media
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then if zipinfo -1 {{ item }} | grep -q '19cinstall.sh' ; then echo '{{ item }}' ; fi ; fi
  register: detect_directory_files_oracledb
  changed_when: "item | length > 0"
  with_items: 
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ sap_install_media_detect_directory }}"

- name: SAP Install Media Detect - Oracle DB - Identify Oracle DB Client installation media
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then if zipinfo -1 {{ item }} | grep -q 'OCL_LINUX_X86_64' ; then echo '{{ item }}' ; fi ; fi
  register: detect_directory_files_oracledb_client
  changed_when: "item | length > 0"
  with_items: 
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ sap_install_media_detect_directory }}"

- name: SAP Install Media Detect - Oracle DB - Extract ZIP files of Oracle DB installation media
  ansible.builtin.shell: if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d {{ sap_install_media_detect_directory }}/oracledb_extracted/{{ item }}_extracted; fi
  with_items: 
    - "{{ detect_directory_files_oracledb.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ sap_install_media_detect_directory }}"

- name: SAP Install Media Detect - Oracle DB - Extract ZIP files of Oracle DB Client installation media
  ansible.builtin.shell: if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d {{ sap_install_media_detect_directory }}/oracledb_client_extracted/{{ item }}_extracted; fi
  with_items: 
    - "{{ detect_directory_files_oracledb_client.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ sap_install_media_detect_directory }}"

- name: SAP Install Media Detect - Oracle DB - Identify Oracle DB extracted
  ansible.builtin.find:
    paths: "{{ sap_install_media_detect_directory }}/oracledb_extracted"
    recurse: yes
    file_type: directory
    contains: "LINUX_X86_64"
  register: detect_directory_oracledb_extracted

- name: SAP Install Media Detect - Oracle DB - Identify Oracle DB Client extracted
  ansible.builtin.find:
    paths: "{{ sap_install_media_detect_directory }}/oracledb_client_extracted"
    recurse: yes
    file_type: directory
    contains: "OCL_LINUX_X86_64"
  register: detect_directory_oracledb_client_extracted

- name: SAP Install Media Detect - Oracle DB - Local Directory source - move Oracle DB compressed archive files
  command: mv "{{ sap_install_media_detect_directory }}/{{ item }}" "{{ sap_install_media_detect_directory }}/oracledb/{{ item }}"
  with_items: 
    - "{{ detect_directory_files_oracledb.results | map(attribute='stdout') | select() }}"
    - "{{ detect_directory_files_oracledb_client.results | map(attribute='stdout') | select() }}"
  when:
    - sap_install_media_detect_source == "local_dir"
