---

# CHECK: we need to define variables, when the Hana Replication interface != ansible_hostname
# for now I set the default to ansible_hostname, so I can update the rest of the role with that variable
#  __sap_ha_install_hana_hsr_node_name
#  __sap_ha_install_hana_hsr_node_domain
- name: "SAP HSR - Pick up interface node name from definition"
  ansible.builtin.set_fact:
    __sap_ha_install_hana_hsr_node_name: "{{ ansible_hostname }}"
  tags: always

## The following variables can be used to simplify the role

- name: "SAP - HSR create information on HSR connection interface"
  ansible.builtin.set_fact:
    __sap_ha_install_hana_hsr_connection:
      node_name: "{{ item.node_name.split('.')[0] }}"
      node_domain: "{{ item.node_name.split('.')[1:] | join('.') or sap_ha_install_hana_hsr_fqdn }}"
      node_ip: "{{ item.node_ip }}"
      node_role: "{{ item.node_role | default('secondary') }}"
      hana_site: "{{ item.hana_site }}"
  loop: "{{ sap_ha_install_hana_hsr_cluster_nodes }}"
  loop_control:
    label: "{{ item.node_name }}"
  when:
    - item.node_ip in ansible_all_ipv4_addresses
  tags: always

- name: SAP HSR - Check that hsr interface is configured on host
  ansible.builtin.assert:
    that:
      - __sap_ha_install_hana_hsr_connection.node_ip is defined
      - __sap_ha_install_hana_hsr_connection.node_ip != ""
    fail_msg: "The IP adress configured for HSR does not exist on this host"
    success_msg: "The IP adress for HSR is configured on this host"
  tags: always

- name: "SAP HSR - Pick up primary node name from definition"
  ansible.builtin.set_fact:
    __sap_ha_install_hana_hsr_primary_node: "{{ item.node_name }}"
    __sap_ha_install_hana_hsr_primary_node_name: "{{ item.node_name.split('.')[0] }}"
    __sap_ha_install_hana_hsr_primary_node_domain: "{{ item.node_name.split('.')[1:] | join('.') }}"
    __sap_ha_install_hana_hsr_primary_node_ip: "{{ item.node_ip }}"
  when:
    - item.node_role is defined
    - item.node_role == 'primary'
  loop: "{{ sap_ha_install_hana_hsr_cluster_nodes }}"
  loop_control:
    label: "{{ item.node_name }}"
  tags: always

- name: "SAP HSR - Verify that Ansible can connect to the defined primary node by name"
  ansible.builtin.command: |
    hostname -s
  delegate_to: "{{ __sap_ha_install_hana_hsr_primary_node_name }}"
  register: __sap_ha_install_hana_hsr_primary_node_name_check
  when:
    - __sap_ha_install_hana_hsr_node_name != __sap_ha_install_hana_hsr_primary_node_name
  ignore_unreachable: true
  ignore_errors: true
  failed_when: false
  changed_when: false
  become: false
  tags:
    - hsr_pki

# BEGIN of primary node connectivity test block
- name: "SAP HSR - Check block to verify Ansible access to primary node"
  block:
    - name: "SAP HSR - Verify that Ansible can connect to the defined primary node by IP"
      ansible.builtin.command: |
        hostname -s
      delegate_to: "{{ __sap_ha_install_hana_hsr_primary_node_ip }}"
      register: __sap_ha_install_hana_hsr_primary_node_ip_check
      ignore_unreachable: true
      ignore_errors: true
      failed_when: false
      changed_when: false

    - name: "SAP HSR - Use IP for tasks that must run on the primary node"
      ansible.builtin.set_fact:
        __sap_ha_install_hana_hsr_primary_node: "{{ __sap_ha_install_hana_hsr_primary_node_ip }}"
      when:
        - __sap_ha_install_hana_hsr_primary_node_ip_check.stdout == __sap_ha_install_hana_hsr_primary_node_name

    - name: "SAP HSR - Fail if the primary node cannot be connected to"
      ansible.builtin.fail:
        msg: |
          Aborting due to issues identifying and connecting to the primary node.
          It can either not be reached by host name or the connected IP returns
          an unmatching hostname.

      when:
        - __sap_ha_install_hana_hsr_primary_node_ip_check.unreachable is defined or
          __sap_ha_install_hana_hsr_primary_node_ip_check.stdout != __sap_ha_install_hana_hsr_primary_node_name

  # block settings
  when:
    - __sap_ha_install_hana_hsr_node_name != __sap_ha_install_hana_hsr_primary_node_name
    - __sap_ha_install_hana_hsr_primary_node_name_check.unreachable is defined
    - __sap_ha_install_hana_hsr_primary_node_name_check.unreachable
  become: false
  tags:
    - hsr_pki
# END of primary node connectivity test block

- name: "SAP HSR - Update /etc/hosts"
  include_tasks:
    file: update_etchosts.yml
    apply:
      tags: hsr_etchosts
  when:
    - (sap_hana_update_etchosts is defined and sap_hana_update_etchosts) or
      sap_ha_install_hana_hsr_update_etchosts
  tags:
    - hsr_etchosts

- name: "SAP HSR - hdbuserstore"
  include_tasks:
    file: hdbuserstore.yml
    apply:
      tags: hsr_hdbuserstore
  tags:
    - hsr_hdbuserstore

- name: "SAP HSR - Log Mode"
  include_tasks:
    file: log_mode.yml
    apply:
      tags: hsr_logmode
  tags:
    - hsr_logmode

# Steps only running on secondary nodes
- name: "SAP HSR - PKI Files"
  include_tasks:
    file: pki_files.yml
    apply:
      tags: hsr_pki
      vars:
        __sap_ha_install_hana_hsr_secpath: "/usr/sap/{{ sap_ha_install_hana_hsr_sid }}/SYS/global/security/rsecssfs"
  when:
    - __sap_ha_install_hana_hsr_node_name != __sap_ha_install_hana_hsr_primary_node_name
  tags:
    - hsr_pki

# Steps only executed on a primary node
- name: "SAP HSR - Run Backup"
  include_tasks:
    file: run_backup.yml
    apply:
      become: true
      become_user: "{{ sap_ha_install_hana_hsr_sid | lower }}adm"
      tags: hsr_backup
  when:
    - __sap_ha_install_hana_hsr_node_name == __sap_ha_install_hana_hsr_primary_node_name
  tags:
    - hsr_backup

- name: "SAP HSR - Configure HSR"
  include_tasks:
    file: configure_hsr.yml
    apply:
      tags: hsr_register
  tags:
    - hsr_register
