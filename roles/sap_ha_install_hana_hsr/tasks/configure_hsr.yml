# SPDX-License-Identifier: Apache-2.0
---
- name: "SAP HSR - Check System Replication Status"
  ansible.builtin.shell: |
    source /usr/sap/{{ sap_ha_install_hana_hsr_sid }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_ha_install_hana_hsr_sid | upper }}/HDB{{ sap_ha_install_hana_hsr_instance_number }}/exe/hdbnsutil \
    -sr_state
  become: true
  become_user: "{{ sap_ha_install_hana_hsr_sid | lower }}adm"
  register: __sap_ha_install_hana_hsr_srstate
  changed_when: false
  failed_when: false

# looping through cluster definition to run on defined primary
# and apply the respective 'site' value
- name: "SAP HSR - Enable HANA System Replication on primary node"
  ansible.builtin.shell: |
    source /usr/sap/{{ sap_ha_install_hana_hsr_sid }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_ha_install_hana_hsr_sid | upper }}/HDB{{ sap_ha_install_hana_hsr_instance_number }}/exe/hdbnsutil \
    -sr_enable --name="{{ item.hana_site }}"
  become: true
  become_user: "{{ sap_ha_install_hana_hsr_sid | lower }}adm"
  register: __sap_ha_install_hana_hsr_enablesr
  changed_when: "'successfully enabled system as system replication source site' in __sap_ha_install_hana_hsr_enablesr.stdout"
  when:
    - __sap_ha_install_hana_hsr_node_name == item.node_name.split('.')[0]
    - item.node_role is defined and item.node_role == 'primary'
    - "'is source system' not in __sap_ha_install_hana_hsr_srstate.stdout"
  loop: "{{ sap_ha_install_hana_hsr_cluster_nodes }}"
  loop_control:
    label: "{{ item.node_name }}"

# looping through cluster definition to run on secondary node
# and apply the respective 'site' value
# - 'throttle' to avoid simultaneous run for multiple secondaries as this confuses the primary
- name: "SAP HSR - Register secondary node to HANA System Replication"
  ansible.builtin.shell: |
    source /usr/sap/{{ sap_ha_install_hana_hsr_sid }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_ha_install_hana_hsr_sid | upper }}/HDB{{ sap_ha_install_hana_hsr_instance_number }}/exe/hdbnsutil \
    -sr_register --name={{ item.hana_site }} \
    --remoteHost={{ __sap_ha_install_hana_hsr_primary_node_name }} --remoteInstance={{ sap_ha_install_hana_hsr_instance_number }} \
    --replicationMode={{ sap_ha_install_hana_hsr_rep_mode }} --operationMode={{ sap_ha_install_hana_hsr_oper_mode }} \
    --online
  become: true
  become_user: "{{ sap_ha_install_hana_hsr_sid | lower }}adm"
  register: __sap_ha_install_hana_hsr_registersr
  when:
    - __sap_ha_install_hana_hsr_node_name == item.node_name.split('.')[0]
    - item.node_role is not defined or item.node_role == 'secondary'
    - __sap_ha_install_hana_hsr_node_name not in __sap_ha_install_hana_hsr_srstate.stdout
  loop: "{{ sap_ha_install_hana_hsr_cluster_nodes }}"
  loop_control:
    label: "{{ item.node_name }}"
  changed_when: true
  throttle: 1

- name: "SAP HSR - Start HANA instance on secondary"
  ansible.builtin.shell: |
    /usr/sap/{{ sap_ha_install_hana_hsr_sid | upper }}/HDB{{ sap_ha_install_hana_hsr_instance_number }}/exe/sapcontrol \
    -nr {{ sap_ha_install_hana_hsr_instance_number }} -function StartSystem
  become: true
  become_user: "{{ sap_ha_install_hana_hsr_sid | lower }}adm"
  register: __sap_ha_install_hana_hsr_startinstance
  changed_when: "'StartSystem' in __sap_ha_install_hana_hsr_startinstance.stdout"
  when:
    - __sap_ha_install_hana_hsr_node_name != __sap_ha_install_hana_hsr_primary_node_name
    - __sap_ha_install_hana_hsr_node_name not in __sap_ha_install_hana_hsr_srstate.stdout
