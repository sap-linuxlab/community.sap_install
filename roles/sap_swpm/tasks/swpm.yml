---

### Deprecated standard method, can fail to detect process exit (e.g. hang errors with SAP SWPM 2.0 SP11)
### Detect changed when using 'SAPinst build information' from beginning of stdout
### Or detect changed when using instslana.xml at end of stdout (this is the Process XML file aka. SAPInst Software Logistics Toolset Analytics XML file, which records the installation information)
#- name:  SAP SWPM - {{ sap_swpm_swpm_installation_header }}
#  command: >-
#    ./sapinst \
#    {{ sap_swpm_swpm_command_inifile }} \
#    {{ sap_swpm_swpm_command_product_id }} \
#    {{ sap_swpm_swpm_command_extra_args }}
#  register: __sap_swpm_register_sapinst
#  args:
#    chdir: "{{ sap_swpm_sapinst_path }}"
#  failed_when: __sap_swpm_register_sapinst is failed
#  changed_when: "'SAPinst build information' in __sap_swpm_register_sapinst.stdout"
##  changed_when: "'instslana' in __sap_swpm_register_sapinst.stdout"


### Async method

# Required for Ansible Module pids
- name: Install Python devel and gcc to system Python
  ansible.builtin.package:
    name:
      - python3-devel
      - gcc
    state: present

# Required for Ansible Module pids
- name: Install Python dependency psutil to system Python
  ansible.builtin.pip:
    name:
      - psutil
#    executable: pip3.6

- name: Set fact for the sapinst command line
  ansible.builtin.set_fact:
    __sap_swpm_sapinst_command: "./sapinst {{ sap_swpm_swpm_command_inifile }}
    {{ sap_swpm_swpm_command_product_id }}
    {{ sap_swpm_swpm_command_extra_args }}"
  tags: sap_swpm_sapinst_commandline

- name: Display the sapinst command line
  ansible.builtin.debug:
    msg: "SAP SWPM install command: '{{ __sap_swpm_sapinst_command }}'"
  tags: sap_swpm_sapinst_commandline

# Call sapinst synchronously
# Reason for noqa: This command installs software, so it will change things
# - name: SAP SWPM - {{ sap_swpm_swpm_installation_header }} # noqa no-changed-when
#   ansible.builtin.command: "{{ __sap_swpm_sapinst_command }}"
#   register: __sap_swpm_register_sapinst
#   args:
#     chdir: "{{ sap_swpm_sapinst_path }}"

# Execute SAP SWPM
# Reason for noqa: This command installs software, so it will change things
- name: SAP SWPM - {{ sap_swpm_swpm_installation_header }} # noqa no-changed-when
  ansible.builtin.command: "{{ __sap_swpm_sapinst_command }}"
  register: __sap_swpm_register_sapinst_async_job
  args:
    chdir: "{{ sap_swpm_sapinst_path }}"
  async: 32400 # Seconds for maximum runtime, set to 9 hours
  poll: 0 # Seconds between polls, use 0 to run Ansible Tasks concurrently

# Monitor sapinst process (i.e. ps aux | grep sapinst) and wait for exit
- name: SAP SWPM - Wait for sapinst process to exit, poll every 60 seconds
  community.general.pids:
    name: sapinst
#  shell: ps -ef | awk '/sapinst/&&!/awk/&&!/ansible/{print}'
  register: pids_sapinst
  until: "pids_sapinst.pids | length == 0"
#  until: "pids_sapinst.stdout | length == 0"
  retries: 1000
  delay: 60

- name: SAP SWPM - Verify if sapinst process finished successfully
  ansible.builtin.async_status:
    jid: "{{ __sap_swpm_register_sapinst_async_job.ansible_job_id }}"
  register: __sap_swpm_register_sapinst
  failed_when: __sap_swpm_register_sapinst.finished != 1 or __sap_swpm_register_sapinst.rc != 0
#   #until: __sap_swpm_register_sapinst.finished
#   #retries: 1000
#   #delay: 60

- name: SAP SWPM - Display the sapinst return code
  ansible.builtin.debug:
    msg: "{{ __sap_swpm_register_sapinst.rc }}"

- name: SAP SWPM - Display the sapinst output
  ansible.builtin.debug:
    msg: "{{ __sap_swpm_register_sapinst.stdout_lines }}"

- name: SAP SWPM - Find last installation location
  ansible.builtin.command: cat /tmp/sapinst_instdir/.lastInstallationLocation
  register: swpm_last_install_path
  changed_when: false

- name: SAP SWPM - Verify if SWPM success file exists
  ansible.builtin.stat:
    path: "{{ swpm_last_install_path.stdout }}/installationSuccesfullyFinished.dat"
  register: swpm_success_file
  failed_when: swpm_success_file.stat.exists == false

# Equivalent to running: cat $(cat /tmp/sapinst_instdir/.lastInstallationLocation)/installationSuccesfullyFinished.dat
- name: SAP SWPM - Get success file
  ansible.builtin.command: "cat {{ swpm_last_install_path.stdout }}/installationSuccesfullyFinished.dat"
  register: swpm_success_file_contents
  changed_when: false

- name: SAP SWPM - Display installation finished from success file
  ansible.builtin.debug:
    msg: "{{ swpm_success_file_contents.stdout_lines }}"
