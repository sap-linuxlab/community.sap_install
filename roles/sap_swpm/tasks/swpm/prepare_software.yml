---

################
# Prepare software path
################

# Software Path

- name: SAP SWPM Pre Install - Check availability of software path - {{ sap_swpm_software_path }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_software_path }}"
  register: sap_swpm_software_path_stat
  failed_when: not sap_swpm_software_path_stat.stat.exists

- name: SAP SWPM Pre Install - Set directory and file permissions
  when: sap_swpm_set_file_permissions
  block:

    - name: SAP SWPM Pre Install - Find directories
      ansible.builtin.find:
        path: "{{ sap_swpm_software_path }}"
        file_type: directory
      register: __sap_swpm_register_find_result_directories

    - name: SAP SWPM Pre Install - Create list of directories
      ansible.builtin.set_fact:
        __sap_swpm_fact_directories: "{{ __sap_swpm_register_find_result_directories.files | map(attribute='path') | reject('contains', 'extracted') }}"

    - name: SAP SWPM Pre Install - Ensure correct permissions and ownership of all directories
      ansible.builtin.file:
        path: "{{ line_item }}"
        recurse: no
        mode: "{{ sap_swpm_software_directory_mode }}"
        owner: "{{ sap_swpm_software_directory_owner }}"
        group: "{{ sap_swpm_software_directory_group }}"
      loop: "{{ __sap_swpm_fact_directories }}"
      loop_control:
        loop_var: line_item
      when:
        - __sap_swpm_fact_directories is defined
        - __sap_swpm_register_find_result_directories is defined

    - name: SAP SWPM Pre Install - Find non-SAPCAR files
      ansible.builtin.find:
        path: "{{ sap_swpm_software_path }}"
        file_type: file
        recurse: true
        excludes: "SAPCAR*EXE"
      register: __sap_swpm_register_find_result_files_non_sapcar

    - name: SAP SWPM Pre Install - Create list of files
      ansible.builtin.set_fact:
        __sap_swpm_fact_files_non_sapcar: "{{ __sap_swpm_register_find_result_files_non_sapcar.files | map(attribute='path') | reject('contains', 'extracted/') }}"
      when: __sap_swpm_register_find_result_files_non_sapcar is defined

# Reasons for noqa:
# - command-instead-of-module: Shorter execution time compared to looping over a list when using the file module
# - no-changed-when: Not worth checking permissions and ownership before this task and comparing afterwards
    - name: SAP SWPM Pre Install - Ensure correct permissions and ownership of all non-SAPCAR files # noqa command-instead-of-module no-changed-when
      ansible.builtin.shell: >
         chown {{ sap_swpm_files_non_sapcar_owner }}:{{ sap_swpm_files_non_sapcar_group }} \
         {{ line_item | join(' ') }} &&
         chmod {{ sap_swpm_files_non_sapcar_mode }} \
         {{ line_item | join(' ') }}
      loop: "{{ __sap_swpm_fact_files_non_sapcar | batch(100) }}"
      loop_control:
        loop_var: line_item
        label: "Batch {{ (__sap_swpm_fact_files_non_sapcar.index(line_item[0]) // 100) + 1 }}, first item: {{ line_item[0] }}"
      when:
        - __sap_swpm_fact_files_non_sapcar is defined
        - __sap_swpm_register_find_result_files_non_sapcar is defined


# SAPCAR Path

- name: SAP SWPM Pre Install - Check availability of SAPCAR path - {{ sap_swpm_sapcar_path }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_sapcar_path | d(sap_swpm_software_path) }}"
  register: sap_swpm_sapcar_path_stat
  failed_when: not sap_swpm_sapcar_path_stat.stat.exists

- name: SAP SWPM Pre Install - Change ownership of SAPCAR path - {{ sap_swpm_sapcar_path }}
  ansible.builtin.file:
    path: "{{ sap_swpm_sapcar_path }}"
    state: directory
    recurse: no
    mode: "{{ sap_swpm_software_directory_mode }}"
    owner: "{{ sap_swpm_software_directory_owner }}"
    group: "{{ sap_swpm_software_directory_group }}"
  when: sap_swpm_set_file_permissions

# SWPM Path

- name: SAP SWPM Pre Install - Check availability of SWPM path - {{ sap_swpm_swpm_path }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_swpm_path | d(sap_swpm_software_path) }}"
  register: sap_swpm_swpm_path_stat
  failed_when: not sap_swpm_swpm_path_stat.stat.exists

- name: SAP SWPM Pre Install - Change ownership of SWPM path - {{ sap_swpm_swpm_path }}
  ansible.builtin.file:
    path: "{{ sap_swpm_swpm_path }}"
    state: directory
    recurse: no
    mode: "{{ sap_swpm_software_directory_mode }}"
    owner: "{{ sap_swpm_software_directory_owner }}"
    group: "{{ sap_swpm_software_directory_group }}"
  when:
    - sap_swpm_swpm_path != sap_swpm_software_path
    - sap_swpm_set_file_permissions


################
# Get software files from software paths
################

# 1. SAPCAR

- name: SAP SWPM Pre Install - Get SAPCAR from {{ sap_swpm_sapcar_path }}
  ansible.builtin.shell: |
    ls SAPCAR*.EXE
  args:
    chdir: "{{ sap_swpm_sapcar_path }}"
  register: sap_swpm_sapcar_file_name_get
  changed_when: false

- name: SAP SWPM Pre Install - Set fact for SAPCAR
  ansible.builtin.set_fact:
    sap_swpm_sapcar_file_name: "{{ sap_swpm_sapcar_file_name_get.stdout }}"

- name: SAP SWPM Pre Install - Check availability of SAPCAR - {{ sap_swpm_sapcar_path + '/' + sap_swpm_sapcar_file_name }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_sapcar_path }}/{{ sap_swpm_sapcar_file_name }}"
  register: sap_swpm_sapcar_file_name_stat
  failed_when: not sap_swpm_sapcar_file_name_stat.stat.exists

- name: SAP SWPM Pre Install - Ensure correct permissions and ownership of the SAPCAR*EXE file
  ansible.builtin.file:
    path: "{{ sap_swpm_sapcar_path }}/{{ sap_swpm_sapcar_file_name }}"
    recurse: no
    mode: "{{ sap_swpm_files_sapcar_mode }}"
    owner: "{{ sap_swpm_files_sapcar_owner }}"
    group: "{{ sap_swpm_files_sapcar_group }}"
  when: sap_swpm_set_file_permissions

# 2. SWPM

- name: SAP SWPM Pre Install - Get SWPM from {{ sap_swpm_swpm_path }}
  ansible.builtin.shell: |
    ls SWPM*.SAR
  args:
    chdir: "{{ sap_swpm_swpm_path }}"
  register: sap_swpm_swpm_sar_file_name_get
  changed_when: false

- name: SAP SWPM Pre Install - Set fact for SWPM
  ansible.builtin.set_fact:
    sap_swpm_swpm_sar_file_name: "{{ sap_swpm_swpm_sar_file_name_get.stdout }}"

- name: SAP SWPM Pre Install - Check availability of SWPM - {{ sap_swpm_swpm_path + '/' + sap_swpm_swpm_sar_file_name }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_swpm_path }}/{{ sap_swpm_swpm_sar_file_name }}"
  register: sap_swpm_swpm_sar_file_name_stat
  failed_when: not sap_swpm_swpm_sar_file_name_stat.stat.exists

# Note: We use the permissions and ownership settings for non-SAPCAR*EXE files:
- name: SAP SWPM Pre Install - Ensure correct permissions and ownership of the SWPM*SAR file
  ansible.builtin.file:
    path: "{{ sap_swpm_swpm_path }}/{{ sap_swpm_swpm_sar_file_name }}"
    recurse: no
    mode: "{{ sap_swpm_files_non_sapcar_mode }}"
    owner: "{{ sap_swpm_files_non_sapcar_owner }}"
    group: "{{ sap_swpm_files_non_sapcar_group }}"
  when:
    - sap_swpm_swpm_path != sap_swpm_software_path
    - sap_swpm_set_file_permissions

- name: SAP SWPM Pre Install - Full SAP System
  when: not sap_swpm_generic | bool
  block:

  # 3. IGS

    - name: SAP SWPM Pre Install - Get IGS from software path
      ansible.builtin.shell: |
        ls igsexe*.sar
      args:
        chdir: "{{ sap_swpm_software_path }}"
      register: sap_swpm_igs_file_name_get
      changed_when: false

    - name: SAP SWPM Pre Install - Set fact for IGS
      ansible.builtin.set_fact:
        sap_swpm_igs_path: "{{ sap_swpm_software_path }}"
        sap_swpm_igs_file_name: "{{ sap_swpm_igs_file_name_get.stdout }}"

    - name: SAP SWPM Pre Install - Check availability of IGS - {{ sap_swpm_igs_path + '/' + sap_swpm_igs_file_name }}
      ansible.builtin.stat:
        path: "{{ sap_swpm_igs_path }}/{{ sap_swpm_igs_file_name }}"
      register: sap_swpm_igs_file_name_stat
      failed_when: not sap_swpm_igs_file_name_stat.stat.exists

  # 4. IGS Helper

    - name: SAP SWPM Pre Install - Get IGS Helper from software path
      ansible.builtin.shell: |
        ls igshelper*.sar
      args:
        chdir: "{{ sap_swpm_software_path }}"
      register: sap_swpm_igs_helper_file_name_get
      changed_when: false

    - name: SAP SWPM Pre Install - Set fact for IGS
      ansible.builtin.set_fact:
        sap_swpm_igs_helper_path: "{{ sap_swpm_software_path }}"
        sap_swpm_igs_helper_file_name: "{{ sap_swpm_igs_helper_file_name_get.stdout }}"

    - name: SAP SWPM Pre Install - Check availability of IGS Helper - {{ sap_swpm_igs_helper_path + '/' + sap_swpm_igs_helper_file_name }}
      ansible.builtin.stat:
        path: "{{ sap_swpm_igs_helper_path }}/{{ sap_swpm_igs_helper_file_name }}"
      register: sap_swpm_igs_helper_file_name_stat
      failed_when: not sap_swpm_igs_helper_file_name_stat.stat.exists

  # 5. SAPEXEDB

    - name: SAP SWPM Pre Install - Get SAPEXEDB from software path
      ansible.builtin.shell: |
        ls SAPEXEDB_*.SAR
      args:
        chdir: "{{ sap_swpm_software_path }}"
      register: sap_swpm_kernel_dependent_file_name_get
      changed_when: false

    - name: SAP SWPM Pre Install - Set fact for SAPEXEDB
      ansible.builtin.set_fact:
        sap_swpm_kernel_dependent_path: "{{ sap_swpm_software_path }}"
        sap_swpm_kernel_dependent_file_name: "{{ sap_swpm_kernel_dependent_file_name_get.stdout }}"

    - name: SAP SWPM Pre Install - Check availability of SAPEXEDB - {{ sap_swpm_kernel_dependent_path + '/' + sap_swpm_kernel_dependent_file_name }}
      ansible.builtin.stat:
        path: "{{ sap_swpm_kernel_dependent_path }}/{{ sap_swpm_kernel_dependent_file_name }}"
      register: sap_swpm_kernel_dependent_file_name_stat
      failed_when: not sap_swpm_kernel_dependent_file_name_stat.stat.exists

  # 6. SAPEXE

    - name: SAP SWPM Pre Install - Get SAPEXE from software path
      ansible.builtin.shell: |
        ls SAPEXE_*.SAR
      args:
        chdir: "{{ sap_swpm_software_path }}"
      register: sap_swpm_kernel_independent_file_name_get
      changed_when: false

    - name: SAP SWPM Pre Install - Set fact for SAPEXE
      ansible.builtin.set_fact:
        sap_swpm_kernel_independent_path: "{{ sap_swpm_software_path }}"
        sap_swpm_kernel_independent_file_name: "{{ sap_swpm_kernel_independent_file_name_get.stdout }}"

    - name: SAP SWPM Pre Install - Check availability of SAPEXE - {{ sap_swpm_kernel_independent_path + '/' + sap_swpm_kernel_independent_file_name }}
      ansible.builtin.stat:
        path: "{{ sap_swpm_kernel_independent_path }}/{{ sap_swpm_kernel_independent_file_name }}"
      register: sap_swpm_kernel_independent_file_name_stat
      failed_when: not sap_swpm_kernel_independent_file_name_stat.stat.exists

- name: SAP SWPM Pre Install - Webdispatcher
  when: "'Webdispatcher' in sap_swpm_product_catalog_id"
  block:

  # 7. Web Dispatcher

    - name: SAP SWPM Pre Install - Get WEBDISP from software path
      ansible.builtin.shell: |
        ls SAPWEBDISP_*.SAR
      args:
        chdir: "{{ sap_swpm_software_path }}"
      register: sap_swpm_web_dispatcher_file_name_get
      changed_when: false

    - name: SAP SWPM Pre Install - Set fact for WEBDISP
      ansible.builtin.set_fact:
        sap_swpm_web_dispatcher_path: "{{ sap_swpm_software_path }}"
        sap_swpm_web_dispatcher_file_name: "{{ sap_swpm_web_dispatcher_file_name_get.stdout }}"

    - name: SAP SWPM Pre Install - Check availability of WEBDISP - {{ sap_swpm_web_dispatcher_path + '/' + sap_swpm_web_dispatcher_file_name }}
      ansible.builtin.stat:
        path: "{{ sap_swpm_web_dispatcher_path }}/{{ sap_swpm_web_dispatcher_file_name }}"
      register: sap_swpm_web_dispatcher_file_name_stat
      failed_when: not sap_swpm_web_dispatcher_file_name_stat.stat.exists
